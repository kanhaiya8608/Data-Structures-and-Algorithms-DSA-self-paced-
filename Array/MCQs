1. Let T(n) be defined by T(1) = 10 and T(n + 1) = 2n + T(n) and for all integers n ≥ 1 . Which of the 
following represents the order of growth of T(n) as a function of
Ans. O(n2)


2. An all-pairs shortest-paths problem is efficiently solved using:
Ans.  Floyd-Warshall algorithm


3. The travelling salesman problem can be solved in:
Ans.  Exponential time using dynamic programming algorithm or branch-and-bound algorithm


4. Which of the following is asymptotically smaller?
Ans.  lg(lg*n)


5. Let f(n) and g(n) be asymptotically non-negative functions. Which of the following is correct?
Ans.  θ ( f (n) + g(n)) = max (f (n), g(n))


6. Consider the following C function:
 
int f(int n)
{
   static int i = 1;
   if (n >= 5)
      return n;
   n = n+i;
   i++;
   return f(n);
}The value returned by f(1) is
Ans.  7


7. Consider the following C function.
 
int fun (int n)
{
  int x=1, k;
  if (n==1) return x;
  for (k=1; k
The return value of fun(5) is __________.
Ans. 51


8. Consider the following recursive C function. If get(6) function is being called in main() then how
many times will the get() function be invoked before returning to the main()?
 
void get (int n)
{
   if (n < 1) return;
   get(n-1);
   get(n-3);
   printf("%d", n);
}
Ans.  25


9. What will be the output of the following C program?
 
void count(int n)
{
    static int d = 1;
    printf("%d ", n);
    printf("%d ", d);
    d++;
    if(n > 1) count(n-1);
    printf("%d ", d);
}
int main()
{
    count(3);
}
Ans.  3 1 2 2 1 3 4 4 4


10. The function f is defined as follows:
 
int f (int n) {
    if (n <= 1) return 1;
    else if (n % 2  ==  0) return f(n/2);
    else return f(3n - 1);
}Assuming that arbitrarily large integers can be passed as a parameter to the function, consider the following statements.
1. The function f terminates for finitely many different values of n ≥ 1.
ii. The function f terminates for infinitely many different values of n ≥ 1.
iii. The function f does not terminate for finitely many different values of n ≥ 1.
iv. The function f does not terminate for infinitely many different values of n ≥ 1.
Which one of the following options is true of the above?
Ans.  (ii) and (iv)


11. Consider the same recursive C function that takes two arguments
 
unsigned int foo(unsigned int n, unsigned int r) {
  if (n  > 0) return (n%r +  foo (n/r, r ));
  else return 0;
}
What is the return value of the function foo when it is called as foo(513, 2)?
Ans.  2


12. #include<stdio.h>
int f(int *a, int n)
{
  if(n <= 0) return 0;
  else if(*a % 2 == 0) return *a + f(a+1, n-1);
  else return *a - f(a+1, n-1);
}
 
int main()
{
  int a[] = {12, 7, 13, 4, 11, 6};
  printf("%d", f(a, 6));
  getchar();
  return 0;
}
Ans.  15


13. Consider the following function
 
double f(double x){
  if (abs(x*x - 3) < 0.01) return x;
  else return f(x/2 + 1.5/x);
}Give a value q (to 2 decimals) such that f(q) will return q:_____.
Ans.  1.73


14. Consider the C function given below.
 
int f(int j)
{
  static int i = 50;
  int k;
  if (i == j)
  {
    printf(“something”);
    k = f(i);
    return 0;
  }
  else return 0;
}Which one of the following is TRUE?
Ans. The function will exhaust the runtime stack or run into an infinite loop when j = 50


15. Consider the code fragment written in C below :
 
void f (int n)
{ 
  if (n <=1)  {
   printf ("%d", n);
  }
  else {
   f (n/2);
   printf ("%d", n%2);
  }
}What does f(173) print?
Ans.  10101101

